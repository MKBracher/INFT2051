package com.uon.myapp;

import static com.codename1.ui.CN.*;

import com.codename1.ui.*;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.layouts.BoxLayout;
import com.uon.myapp.Displays.*;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    private Display dispRemainingTime;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if (err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });
    }

    public void start() {
        if (current != null) {
            current.show();
            return;
        }
        frmMainForm = new Form("", BoxLayout.y());

        startUp();

        frmMainForm.show();
    }

    public void stop() {
        current = getCurrentForm();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = getCurrentForm();
        }
    }

    public void destroy() {
    }

    public String sFrmTitle = "Math Wiz Quiz";

    public String[] sDifficulty = {"Easy", "Normal", "Hard"};

    public String[] sMode = {"Addition", "Subtraction", "Multiplication", "Division", "Random"};

    public String[] sDisplays = {": Main Menu", ": Lobby"};

    public String[] sDisplayTitle = {
            sFrmTitle + sDisplays[0],
            sFrmTitle + sDisplays[1]
    };

    String sChosenDiff, sChosenMode;

    static Form frmMainForm;

    public void startUp() {

        frmMainForm.removeAll();
        frmMainForm.setTitle(sDisplayTitle[0]);

        MainMenuContainer mainMenuContainer = new MainMenuContainer(BoxLayout.y());

        frmMainForm.add(mainMenuContainer);

        frmMainForm.show();
    }

    public void Lobby() {
        frmMainForm.removeAll();
        frmMainForm.setTitle(sDisplayTitle[1]);

        LobbyContainer lobbyContainer = new LobbyContainer(BoxLayout.y(), sDifficulty, sMode);

        frmMainForm.add(lobbyContainer);

        frmMainForm.show();
    }

    public void playGame(int iDifficulty, int iMode, String sTimer) {

        frmMainForm.removeAll();

        sChosenDiff = sDifficulty[iDifficulty];
        sChosenMode = sMode[iMode];

        frmMainForm.setTitle(sFrmTitle + ": " + sChosenDiff + "; " + sChosenMode);

        GameContainer gameContainer = new GameContainer(BoxLayout.y(), iDifficulty, iMode, sTimer);

        frmMainForm.add(gameContainer);

        frmMainForm.show();
    }

    public void Results(String sFinalScore, int iGetDiff, int iGetMode){

        frmMainForm.removeAll();

        String sSummaryDiff = sDifficulty[iGetDiff];
        String sSummaryMode = sMode[iGetMode];

        frmMainForm.setTitle("Game Over");

        ResultsContainer resultsContainer = new ResultsContainer(BoxLayout.y(), sFinalScore, iGetDiff, iGetMode, sSummaryDiff, sSummaryMode);

        frmMainForm.add(resultsContainer);

        frmMainForm.show();

    }
}