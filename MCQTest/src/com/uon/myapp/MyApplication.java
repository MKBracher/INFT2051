package com.uon.myapp;

import static com.codename1.ui.CN.*;

import com.codename1.ui.*;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import java.util.Random;
import com.codename1.ui.layouts.BoxLayout;
import com.uon.myapp.Displays.*;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    private Display dispRemainingTime;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if (err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });
    }

    public void start() {
        if (current != null) {
            current.show();
            return;
        }
        frmStart = new Form("", BoxLayout.y());

        startUp();

        frmStart.show();
    }

    public void stop() {
        current = getCurrentForm();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = getCurrentForm();
        }
    }

    public void destroy() {
    }

    public String sFrmTitle = "Math Wiz Quiz";

    String[] sDifficulty = {"Easy", "Normal", "Hard"};

    String[] sMode = {"Addition", "Subtraction", "Multiplication", "Division"};

    String[] sDisplays = {": Main Menu", ": Lobby"};

    String[] sDisplayTitle = {
            sFrmTitle + sDisplays[0],
            sFrmTitle + sDisplays[1]
    };

    // To keep track of score
    private static int iScore;
    Random randNumGen = new Random();

    // These integers can be used determine what range the randomised numbers could be
    // especially when determining the difficulty of the quiz
    int iMaxRange;
    int iMinRange;

    int i;

    // The number index for each math operation is randomised
    // But one of these options can be manually selected
    // 0 = Addition; 1 = Subtraction; 2 = Multiplication, 3 = Division
    // 4 = Square root; 5 = Exponentiation
    int iOperation;


    static Form frmStart;


    public void startUp() {

        frmStart.removeAll();
        frmStart.setTitle(sDisplayTitle[0]);

        MainMenuContainer mainMenuContainer = new MainMenuContainer(BoxLayout.y());

        frmStart.add(mainMenuContainer);

        frmStart.show();

    }

    public void Lobby() {
        frmStart.removeAll();
        frmStart.setTitle(sDisplayTitle[1]);

        //Form frmLobby = new Form(sDisplayTitle[1], BoxLayout.y());

        LobbyContainer lobbyContainer = new LobbyContainer(BoxLayout.y(), sDifficulty, sMode);

        frmStart.add(lobbyContainer);

        frmStart.show();


    }

    public void playGame(int iDifficulty, int iMode, String sTimer) {

        frmStart.removeAll();

        String sChosenDiff = sDifficulty[iDifficulty];
        String sChosenMode = sMode[iMode];


        frmStart.setTitle(sFrmTitle + ": " + sChosenDiff + "; " + sChosenMode);

        GameContainer gameContainer = new GameContainer(BoxLayout.y(), iDifficulty, iMode, sTimer);

        frmStart.add(gameContainer);

        frmStart.show();
    }
}